# This is a basic workflow to help you get started with the Run Jtest action.
name: Jtest Pull Request

on:
  # Trigger the workflow on push or pull request events but only for the master branch.
  push:
    branches: [ main ]
#  pull_request:

#    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
  
jobs:
  build:
    name: Analyze project with Jtest
    
    # Specifies the type of runner that the job will run on.
    runs-on: self-hosted
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    # Runs code analysis with Jtest

    - name: Run Jtest
      #id: jtest
      working-directory: demo-project
      #run: D:/_JTest/parasoft_jtest_16.05/jtest/jtestcli.exe -config "builtin://Recommended Rules" -property report.format=xml,html,sarif -report "reports" -data demo.data.json
      run: mvn clean jtest:jtest "-Djtest.config=builtin://Recommended Rules"
      #uses: parasoft/run-jtest-action@1.0.0
      #with:
        #Uses the jtest.data.json generated with the Maven command in the previous step
     
       # workingDir: demo-project
      # input: jtest.data.json
        
        # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: demo-project/target/jtest/report.sarif # reports is a default location for reports directory
        
  # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: Static analysis reports
          path: demo-project/target/jtest/*.*
